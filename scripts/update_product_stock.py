#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ.
"""

import asyncio
import asyncpg
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ Python path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from tgbot.config import load_config

async def update_product_stock():
    """–ü–æ–ø–æ–ª–Ω—è–µ—Ç —Ç–æ–≤–∞—Ä—ã –Ω–∞ —Å–∫–ª–∞–¥–µ."""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    config = load_config(".env")
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    conn = await asyncpg.connect(
        host=config.db.host,
        port=config.db.port,
        user=config.db.user,
        password=config.db.password,
        database=config.db.database
    )
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã
        products = await conn.fetch("SELECT product_id, name, stock_quantity FROM products;")
        
        if not products:
            print("‚ùå –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return
        
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤:")
        for product in products:
            print(f"ID: {product['product_id']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {product['name']}, –¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {product['stock_quantity']}")
        
        print("\nüîÑ –ü–æ–ø–æ–ª–Ω—è–µ–º —Å–∫–ª–∞–¥...")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏ = 50 –¥–ª—è –≤—Å–µ—Ö —Ç–æ–≤–∞—Ä–æ–≤
        updated_count = await conn.execute("""
            UPDATE products 
            SET stock_quantity = 50, is_in_stock = true 
            WHERE stock_quantity < 50 OR is_in_stock = false
        """)
        
        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {updated_count.split()[1]} –∏–∑ {len(products)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        updated_products = await conn.fetch("SELECT product_id, name, stock_quantity, is_in_stock FROM products;")
        print("\nüì¶ –û–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∫–ª–∞–¥–∞:")
        for product in updated_products:
            status = "‚úÖ –í –Ω–∞–ª–∏—á–∏–∏" if product['is_in_stock'] else "‚ùå –ù–µ—Ç –≤ –Ω–∞–ª–∏—á–∏–∏"
            print(f"ID: {product['product_id']}, –ù–∞–∑–≤–∞–Ω–∏–µ: {product['name']}, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {product['stock_quantity']}, –°—Ç–∞—Ç—É—Å: {status}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    finally:
        await conn.close()

if __name__ == "__main__":
    asyncio.run(update_product_stock())