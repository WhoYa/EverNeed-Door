# tgbot/keyboards/admin_promotion.py
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Optional
from infrastructure.database.models.products import Product

def promotion_management_keyboard() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ü–∏—è–º–∏.
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ü–∏–∏
    builder.row(
        InlineKeyboardButton(
            text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫—Ü–∏—é",
            callback_data="add_promotion"
        )
    )
    
    # –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ü–∏–π
    builder.row(
        InlineKeyboardButton(
            text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ü–∏–π",
            callback_data="view_promotions"
        )
    )
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    builder.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é",
            callback_data="admin_main"
        )
    )
    
    return builder.as_markup()

def promotion_list_keyboard(promotions: List) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ü–∏–π.
    """
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–π –∞–∫—Ü–∏–∏
    for promo in promotions:
        builder.row(
            InlineKeyboardButton(
                text=f"{promo.name} {'‚úÖ' if promo.is_active else '‚ùå'}",
                callback_data=f"promotion_{promo.promo_id}"
            )
        )
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    builder.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥",
            callback_data="manage_promotions"
        )
    )
    
    return builder.as_markup()

def promotion_edit_keyboard(promo_id: int) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ü–∏–∏.
    """
    builder = InlineKeyboardBuilder()
    
    # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–µ–π –∞–∫—Ü–∏–∏
    builder.row(
        InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–∫—Ü–∏—é",
            callback_data=f"edit_promotion_{promo_id}"
        )
    )
    
    # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ –≤ –∞–∫—Ü–∏–∏
    builder.row(
        InlineKeyboardButton(
            text="üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏",
            callback_data=f"manage_promo_products_{promo_id}"
        )
    )
    
    # –î–µ–∞–∫—Ç–∏–≤–∞—Ü–∏—è/–∞–∫—Ç–∏–≤–∞—Ü–∏—è –∞–∫—Ü–∏–∏
    builder.row(
        InlineKeyboardButton(
            text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å",
            callback_data=f"toggle_promo_status_{promo_id}"
        )
    )
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –∞–∫—Ü–∏–∏
    builder.row(
        InlineKeyboardButton(
            text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–∫—Ü–∏—é",
            callback_data=f"delete_promotion_{promo_id}"
        )
    )
    
    # –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    builder.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É",
            callback_data="view_promotions"
        )
    )
    
    return builder.as_markup()

def product_selection_keyboard(products: List[Product], selected_products: Optional[List[int]] = None) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–∫—Ü–∏–∏.
    """
    builder = InlineKeyboardBuilder()
    
    if selected_products is None:
        selected_products = []
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
    for product in products:
        # –û—Ç–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        mark = "‚úÖ " if product.product_id in selected_products else ""
        builder.row(
            InlineKeyboardButton(
                text=f"{mark}{product.name} ({product.price}‚ÇΩ)",
                callback_data=f"select_product_{product.product_id}"
            )
        )
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –∏ –æ—Ç–º–µ–Ω—ã
    builder.row(
        InlineKeyboardButton(
            text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä",
            callback_data="confirm_product_selection"
        ),
        InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞",
            callback_data="manage_promotions"
        )
    )
    
    return builder.as_markup()

def admin_back_button(callback_data: str) -> InlineKeyboardMarkup:
    """
    –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥ –¥–ª—è –º–µ–Ω—é –∞–∫—Ü–∏–π.
    """
    builder = InlineKeyboardBuilder()
    builder.row(
        InlineKeyboardButton(
            text="üîô –ù–∞–∑–∞–¥",
            callback_data=callback_data
        )
    )
    return builder.as_markup()