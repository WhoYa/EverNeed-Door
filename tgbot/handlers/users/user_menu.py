# tgbot/handlers/user_menu.py
from aiogram import Router, F
from aiogram.filters.command import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
import logging

from tgbot.keyboards.user_menu import main_menu_keyboard
from tgbot.keyboards.user_products import products_keyboard
from infrastructure.database.repositories.requests import RequestsRepo

user_menu_router = Router()
logger = logging.getLogger(__name__)

@user_menu_router.message(CommandStart())
async def command_start(message: Message, state: FSMContext):
    await message.answer(
        text=(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n"
            "–í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –Ω–∞–π–¥—ë—Ç–µ –ª—É—á—à–∏–µ –¥–≤–µ—Ä–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –¥–æ–º–∞ –∏ –æ—Ñ–∏—Å–∞.\n"
            "–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?"
        ),
        reply_markup=main_menu_keyboard(),
    )
    await state.clear()

@user_menu_router.message(F.text.lower().contains("–º–µ–Ω—é"))
async def main_menu(message: Message, state: FSMContext):
    await command_start(message=message, state=state)

@user_menu_router.callback_query(F.data == "catalog")
async def catalog_callback(callback: CallbackQuery, repo: RequestsRepo):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö–∞—Ç–∞–ª–æ–≥" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
    """
    user_id = callback.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ callback.")
    
    products = await repo.products.get_all_products()
    if products:
        await callback.message.edit_text(
            text="üì¶ *–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:*\n–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∏–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏.",
            reply_markup=products_keyboard(products),
            parse_mode="Markdown"
        )
    else:
        logger.warning("–í –º–∞–≥–∞–∑–∏–Ω–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.")
        await callback.message.edit_text(
            "‚ùå –í –º–∞–≥–∞–∑–∏–Ω–µ –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤."
        )
    
    await callback.answer()

@user_menu_router.callback_query(F.data == "main_menu")
async def main_menu_callback(callback: CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ú–µ–Ω—é" –∏–ª–∏ "–ù–∞–∑–∞–¥" –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏–∑ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ä–∞–∑–¥–µ–ª–æ–≤ –±–æ—Ç–∞.
    """
    user_id = callback.from_user.id
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
    await state.clear()
    
    await callback.message.edit_text(
        text=(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "–í –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ –≤—ã –Ω–∞–π–¥—ë—Ç–µ –ª—É—á—à–∏–µ –¥–≤–µ—Ä–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –¥–æ–º–∞ –∏ –æ—Ñ–∏—Å–∞.\n"
            "–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å?"
        ),
        reply_markup=main_menu_keyboard()
    )
    
    await callback.answer()
